library project Libyaml_Dropin is
   for Languages use ("ada", "c");

   for Library_Name use "yaml";

   for Object_Dir use "obj";
   for Library_Dir use "lib";
   for Library_Kind use "relocatable";
   for Library_Interface use ("Yaml", "Yaml.C", "Yaml.Parser", "Yaml.Tags",
                              "Lexer", "Lexer.Base", "Lexer.Source",
                              "Lexer.Source.File", "Yaml.Source",
                              "Yaml.Lexer", "Lexer.Source.Text_IO",
                              "Yaml.Stacks", "Yaml.Stream_Concept", "Text",
                              "Text.Pool", "Text.Builder",
                              "Yaml.Lexer.Evaluation", "Yaml.Text_Set",
                              "Yaml.Destination", "Yaml.Destination.Text_IO",
                              "Yaml.Destination.C_String", "Yaml.Presenter",
                              "Yaml.Presenter.Analysis");
   for Library_Standalone use "encapsulated";
   for Library_Auto_Init use "true";

   for Source_Dirs use ("dropin/src", "dropin/include", "src/interface", "src/implementation",
                        "Parser_Tools/src/interface", "Parser_Tools/src/implementation");

   type Mode_Type is ("debug", "release");
   Mode : Mode_Type := external ("Mode", "debug");

   package Ide is
      for Vcs_Kind use "Git";
   end Ide;

   package Builder is
      Default_Switches := ("-s", "-j0");
      case Mode is
      when "debug" =>
         for Default_Switches ("ada") use Default_Switches & ("-g");
      when "release" =>
         for Default_Switches ("ada") use Default_Switches;
      end case;
   end Builder;

   package Compiler is
      Default_Switches := ("-gnat12", "-gnatwa", "-gnatwl",  "-gnaty3abcefhiklmNprt", "-fstack-check");

      case Mode is
      when "debug" =>
         for Default_Switches ("ada") use
           Default_Switches &  ( "-E", "-gnateE" ,"-g");
      when "release" =>
         for Default_Switches ("ada") use
           Default_Switches &  ("-O3", "-fno-strict-aliasing");
      end case;
   end Compiler;
end Libyaml_Dropin;
